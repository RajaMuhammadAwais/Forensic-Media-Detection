name: FMD Tool CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: Build, Lint, and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: List repo files for debugging
        run: ls -lR

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest markdownlint-cli

      - name: Lint with flake8
        run: |
          echo "Running flake8 linter on repo root..."
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

      - name: Run unit tests with pytest
        run: |
          echo "Running unit tests..."
          pytest tests/ --disable-warnings --maxfail=3

      - name: Lint Markdown files
        run: |
          markdownlint documentation/*.md

  # Optional job to fix Markdown lint issues and create a PR
  auto-fix-markdown:
    name: Auto-fix Markdown Lint Issues and PR
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js for markdownlint-cli
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install markdownlint-cli globally
        run: npm install -g markdownlint-cli

      - name: Run markdownlint-cli with fix flag
        run: markdownlint --fix documentation/*.md

      - name: Commit and push fixes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add documentation/*.md
          git diff --quiet && echo "No markdown lint fixes to commit." || (
            git commit -m "fix: Auto-fix markdown lint issues"
            git push origin main
          )

